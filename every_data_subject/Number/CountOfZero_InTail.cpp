#include<iostream>
using namespace std;


//因为如果是5的倍数的数与偶数相乘会产生一个0
//如果是25的倍数与偶数相乘会产生两个0；
//如果是125的倍数与偶数相乘会产生三个0，以此类推
//
//从1到n的数中，每5个数就会有一个5的倍数出现，即每5个数就会有一个0出现；如5,10,15,20,25，30,35,40,45,50
//在5的倍数的数中，也是每5个数就会出现一个25的倍数，此时在上一步骤的基础上，在添加一个0，如25,50.。。；
//在25的倍数中，每5个数就会出现一个125的倍数，此时需要在加1个0；

int CountOfZero_InTail(int n)
{
    //如果n为0，则此时就会出现一个0
    if(n == 0)
    {
        return 1;
    }
    //如果n不为0，则用n除5，表示从1到n的数中出现了多少个5的倍数
    int temp = n/5;
    int ret = 0;
    while(temp != 0)
    {
        ret = ret + temp;   
        //然后统计在5的倍数中出现了几个25的倍数
        //在25的倍数中出现了几个125的倍数
        temp = temp/5;
    }
    return ret;
}
////所以，用n除5，可以得到各个数
////在各个产生0的数中，还是5的倍数即是25的倍数的数还可以在产生一个0
////在上述的数中，再是5的倍数即是125的倍数的数还可以在产生一个0
////依次类推
////所以，首先对n除5，得到是5的倍数的数的个数
////然后，再次除5得到是25的倍数的数的个数
////以此类推
//int CountOfZero_InTail(int n)
//{
//    long count = 0;
//    long temp=n/5;
//    while (temp!=0)
//    {
//        count+=temp;
//        temp/=5;
//
//    }
//    return count;
//}

int main()
{
    int n;
    cin>>n;
    int ret = CountOfZero_InTail(n);
    cout<<ret;
    return 0;
}
